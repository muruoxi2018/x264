name: x264 CI/CD Pipeline
on:
  push:
    branches: [master, stable]
  pull_request:
    branches: [master, stable]

env:
  FFMPEG_URL: https://git.ffmpeg.org/ffmpeg.git
  CONTRIB_URL: https://code.videolan.org/videolan/x264-ccontrib.git

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      x264_version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get x264 version
        id: get_version
        run: |
          version=$(grep 'X264_VERSION=' configure | cut -d\" -f2)
          echo "version=${version}" >> $GITHUB_OUTPUT

  build:
    needs: setup
    strategy:
      matrix:
        platform: [win32, win64, linux-x86_64, macos-x86_64, macos-arm64]
    runs-on: ${{ 
      matrix.platform == 'win32' && 'windows-2022' ||
      matrix.platform == 'win64' && 'windows-2022' ||
      matrix.platform == 'macos-x86_64' && 'macos-12' ||
      matrix.platform == 'macos-arm64' && 'macos-14' ||
      'ubuntu-22.04'
    }}
    env:
      _TRIPLET: ${{ 
        matrix.platform == 'win32' && 'i686-w64-mingw32' ||
        matrix.platform == 'win64' && 'x86_64-w64-mingw32' ||
        matrix.platform == 'macos-x86_64' && 'x86_64-apple-darwin' ||
        matrix.platform == 'macos-arm64' && 'aarch64-apple-darwin' ||
        'x86_64-pc-linux-gnu'
      }}
      _PLATFORMSUFFIX: ${{ 
        matrix.platform == 'win32' && '.exe' ||
        matrix.platform == 'win64' && '.exe' || 
        ''
      }}
      _CONTRIB_DIR: contrib-${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      
      # 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            gcc clang make nasm yasm \
            ${{ matrix.platform == 'win*' && 'mingw-w64' || '' }}

      # 克隆 FFmpeg 和 contrib
      - name: Clone FFmpeg
        run: git clone --depth 1 $FFMPEG_URL ffmpeg
      
      - name: Clone contrib
        run: |
          git clone --depth 1 $CONTRIB_URL $_CONTRIB_DIR
          cp -r $_CONTRIB_DIR/* .

      # 配置和编译
      - name: Configure
        run: |
          ./configure \
            --host=${{ env._TRIPLET }} \
            --enable-static \
            --enable-pic \
            ${{ matrix.platform == 'win*' && '--cross-prefix=${{ env._TRIPLET }}-' || '' }}

      - name: Build
        run: make -j$(nproc)

      # 测试（仅 Linux）
      - name: Run tests
        if: matrix.platform == 'linux-x86_64'
        run: |
          ./checkasm
          ./x264 --version

      # 重命名并上传制品
      - name: Prepare artifact
        run: mv x264 x264-${{ needs.setup.outputs.x264_version }}${{ env._PLATFORMSUFFIX }}

      - uses: actions/upload-artifact@v3
        with:
          name: x264-${{ matrix.platform }}
          path: x264-${{ needs.setup.outputs.x264_version }}${{ env._PLATFORMSUFFIX }}

  release:
    if: github.ref == 'refs/heads/master'
    needs: [setup, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.setup.outputs.x264_version }}
          files: |
            artifacts/x264-win32/x264-*.exe
            artifacts/x264-win64/x264-*.exe
            artifacts/x264-linux-x86_64/x264-*
            artifacts/x264-macos-*/x264-*
