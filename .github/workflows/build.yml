name: x264 Windows Build
on:
  push:
    branches: [master, stable]
  pull_request:
    branches: [master, stable]

env:
  FFMPEG_URL: https://github.com/FFmpeg/FFmpeg.git
  CONTRIB_URL: https://code.videolan.org/videolan/x264-contrib.git

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      x264_version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get x264 version
        id: get_version
        run: |
          version=$(grep 'X264_VERSION=' configure | cut -d\" -f2)
          echo "version=${version}" >> $GITHUB_OUTPUT

  build:
    needs: setup
    strategy:
      matrix:
        platform: [win32, win64]
        include:
          - platform: win32
            triplet: i686-w64-mingw32
            suffix: .exe
            cross_prefix: i686-w64-mingw32-
          - platform: win64
            triplet: x86_64-w64-mingw32
            suffix: .exe
            cross_prefix: x86_64-w64-mingw32-

    runs-on: windows-2022
    env:
      _CONTRIB_DIR: contrib-${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      # 安装 MinGW 工具链
      - name: Install MinGW
        run: |
          choco install -y mingw --version=12.2.0

      # 克隆 FFmpeg 和 contrib
      - name: Clone FFmpeg
        run: git clone --depth 1 $FFMPEG_URL ffmpeg
      
      - name: Clone contrib
        run: |
          git clone --depth 1 $CONTRIB_URL $_CONTRIB_DIR
          cp -r $_CONTRIB_DIR/* .

      # 配置和编译
      - name: Configure
        run: |
          ./configure \
            --host=${{ matrix.triplet }} \
            --cross-prefix=${{ matrix.cross_prefix }} \
            --enable-static \
            --enable-pic

      - name: Build
        run: make -j$(nproc)

      # 重命名并上传制品
      - name: Prepare artifact
        run: |
          mv x264 x264-${{ needs.setup.outputs.x264_version }}${{ matrix.suffix }}

      - uses: actions/upload-artifact@v4
        with:
          name: x264-${{ matrix.platform }}
          path: x264-${{ needs.setup.outputs.x264_version }}${{ matrix.suffix }}

  release:
    if: github.ref == 'refs/heads/master'
    needs: [setup, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.setup.outputs.x264_version }}
          files: |
            artifacts/x264-win32/x264-*.exe
            artifacts/x264-win64/x264-*.exe
