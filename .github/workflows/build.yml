name: Windows Cross-Compile

on: [push, pull_request]

jobs:
  build-win32:
    runs-on: ubuntu-latest
    env:
      FFMPEG_URL: https://github.com/FFmpeg/FFmpeg.git
      LSMASH_URL: https://github.com/l-smash/l-smash.git
      _TRIPLET: i686-w64-mingw32
      _PLATFORMSUFFIX: .exe
      _WRAPPER: wine
      _CONTRIB_URL: https://artifacts.videolan.org/vlc/win32-llvm/
      LOCAL_INSTALL_DIR: ${{ github.workspace }}/i686-w64-mingw32
      PKG_CONFIG_LIBDIR: ${{ github.workspace }}/i686-w64-mingw32/lib/pkgconfig
      PKGCONFIG: pkg-config

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          wine \
          pkg-config \
          mingw-w64 \
          gcc-mingw-w64-i686 \
          g++-mingw-w64-i686 \
          make \
          automake \
          autoconf \
          libtool \
          nasm \
          git

    - name: Setup environment
      run: |
        mkdir -p $LOCAL_INSTALL_DIR
        echo "LOCAL_INSTALL_DIR=$LOCAL_INSTALL_DIR" >> $GITHUB_ENV
        echo "PKG_CONFIG_LIBDIR=$PKG_CONFIG_LIBDIR" >> $GITHUB_ENV

    - name: Clone FFmpeg
      run: |
        git clone --depth 1 $FFMPEG_URL ffmpeg
        cd ffmpeg
        ./configure --prefix=$LOCAL_INSTALL_DIR \
                   --cross-prefix=i686-w64-mingw32- \
                   --arch=x86 \
                   --target-os=mingw32 \
                   --enable-shared \
                   --disable-static
        make -j$(nproc)
        make install

    - name: Clone L-SMASH
      run: |
        git clone --depth 1 $LSMASH_URL l-smash
        cd l-smash
        ./configure --prefix=$LOCAL_INSTALL_DIR \
                   --cross-prefix=i686-w64-mingw32- \
                   --host=i686-w64-mingw32
        make -j$(nproc)
        make install

    - name: Build x264
      shell: bash
      run: |
        set -x
        ./configure --host="${_TRIPLET}" --cross-prefix="${_TRIPLET}-" --enable-pic --enable-strip
        make -j$(nproc) x264 checkasm
    
    - name: Test
      shell: bash
      run: |
        set -x
        ${_WRAPPER} ./checkasm8${_PLATFORMSUFFIX}
        ${_WRAPPER} ./checkasm10${_PLATFORMSUFFIX}
    
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: x264-win64
        path: |
          x264${_PLATFORMSUFFIX}
          checkasm8${_PLATFORMSUFFIX}
          checkasm10${_PLATFORMSUFFIX}
          config.log
