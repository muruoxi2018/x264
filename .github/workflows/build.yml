name: Build x264 for Windows

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  FFMPEG_URL: https://github.com/FFmpeg/FFmpeg.git
  LSMASH_URL: https://github.com/l-smash/l-smash.git

jobs:
  build-win32:
    name: Build Windows 32-bit
    runs-on: windows-latest
    env:
      _TRIPLET: i686-w64-mingw32
      _PLATFORMSUFFIX: .exe
      _WRAPPER: wine
      _CONTRIB_URL: https://artifacts.videolan.org/vlc/win32-llvm/
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up environment
      shell: bash
      run: |
        set -x
        LOCAL_INSTALL_DIR=$(pwd)/${_TRIPLET}
        echo "LOCAL_INSTALL_DIR=$LOCAL_INSTALL_DIR" >> $GITHUB_ENV
        echo "PKG_CONFIG_LIBDIR=${LOCAL_INSTALL_DIR}/lib/pkgconfig" >> $GITHUB_ENV
        echo "PKGCONFIG=pkg-config" >> $GITHUB_ENV
    
    - name: Install dependencies
      shell: bash
      run: |
        set -x
        sudo apt-get update
        sudo apt-get install -y wine pkg-config mingw-w64
        
    - name: Download and extract contribs
      shell: bash
      run: |
        set -x
        curl -f -o vlc-contrib.txt ${_CONTRIB_URL}
        CONTRIB_NAME=$(sed -n -e "s@.*href=\"\(vlc-contrib-${_TRIPLET}-[^\"]*\.tar\.bz2\)\".*@\1@p" vlc-contrib.txt | sed -n -e '1p')
        curl -f -o vlc-contrib-${_TRIPLET}-latest.tar.bz2 ${_CONTRIB_URL}${CONTRIB_NAME}
        bunzip2 vlc-contrib-${_TRIPLET}-latest.tar.bz2
        tar xvf vlc-contrib-${_TRIPLET}-latest.tar
        perl -pi -e "s'@@CONTRIB_PREFIX@@'$(sed -e "s/'/\\\\'/g" <<< "${LOCAL_INSTALL_DIR}")'g" ${PKG_CONFIG_LIBDIR}/*.pc
    
    - name: Clone and build FFmpeg
      shell: bash
      run: |
        set -x
        git clone --depth 1 --branch master ${FFMPEG_URL} ffmpeg
        cd ffmpeg
        ./configure --prefix="${LOCAL_INSTALL_DIR}" --enable-pic --disable-debug \
          --extra-ldflags="-static" --disable-programs --disable-doc \
          --disable-avdevice --disable-postproc --disable-avfilter \
          --disable-network --disable-encoders --disable-muxers
        make -j$(nproc)
        make -j$(nproc) install
        cd ..
    
    - name: Clone and build L-SMASH
      shell: bash
      run: |
        set -x
        git clone --depth 1 --branch master ${LSMASH_URL} lsmash
        cd lsmash
        ./configure --prefix="${LOCAL_INSTALL_DIR}" --target-os="${_TRIPLET}" --cross-prefix="${_TRIPLET}-"
        make -j$(nproc)
        make -j$(nproc) install
        cd ..
    
    - name: Build x264
      shell: bash
      run: |
        set -x
        ./configure --host="${_TRIPLET}" --cross-prefix="${_TRIPLET}-" --enable-pic --enable-strip
        make -j$(nproc) x264 checkasm
    
    - name: Test
      shell: bash
      run: |
        set -x
        ${_WRAPPER} ./checkasm8${_PLATFORMSUFFIX}
        ${_WRAPPER} ./checkasm10${_PLATFORMSUFFIX}
    
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: x264-win32
        path: |
          x264${_PLATFORMSUFFIX}
          checkasm8${_PLATFORMSUFFIX}
          checkasm10${_PLATFORMSUFFIX}
          config.log

  build-win64:
    name: Build Windows 64-bit
    runs-on: windows-latest
    env:
      _TRIPLET: x86_64-w64-mingw32
      _PLATFORMSUFFIX: .exe
      _WRAPPER: wine
      _CONTRIB_URL: https://artifacts.videolan.org/vlc/win64-llvm/
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up environment
      shell: bash
      run: |
        set -x
        LOCAL_INSTALL_DIR=$(pwd)/${_TRIPLET}
        echo "LOCAL_INSTALL_DIR=$LOCAL_INSTALL_DIR" >> $GITHUB_ENV
        echo "PKG_CONFIG_LIBDIR=${LOCAL_INSTALL_DIR}/lib/pkgconfig" >> $GITHUB_ENV
        echo "PKGCONFIG=pkg-config" >> $GITHUB_ENV
    
    - name: Install dependencies
      shell: bash
      run: |
        set -x
        sudo apt-get update
        sudo apt-get install -y wine pkg-config mingw-w64
        
    - name: Download and extract contribs
      shell: bash
      run: |
        set -x
        curl -f -o vlc-contrib.txt ${_CONTRIB_URL}
        CONTRIB_NAME=$(sed -n -e "s@.*href=\"\(vlc-contrib-${_TRIPLET}-[^\"]*\.tar\.bz2\)\".*@\1@p" vlc-contrib.txt | sed -n -e '1p')
        curl -f -o vlc-contrib-${_TRIPLET}-latest.tar.bz2 ${_CONTRIB_URL}${CONTRIB_NAME}
        bunzip2 vlc-contrib-${_TRIPLET}-latest.tar.bz2
        tar xvf vlc-contrib-${_TRIPLET}-latest.tar
        perl -pi -e "s'@@CONTRIB_PREFIX@@'$(sed -e "s/'/\\\\'/g" <<< "${LOCAL_INSTALL_DIR}")'g" ${PKG_CONFIG_LIBDIR}/*.pc
    
    - name: Clone and build FFmpeg
      shell: bash
      run: |
        set -x
        git clone --depth 1 --branch master ${FFMPEG_URL} ffmpeg
        cd ffmpeg
        ./configure --prefix="${LOCAL_INSTALL_DIR}" --enable-pic --disable-debug \
          --extra-ldflags="-static" --disable-programs --disable-doc \
          --disable-avdevice --disable-postproc --disable-avfilter \
          --disable-network --disable-encoders --disable-muxers
        make -j$(nproc)
        make -j$(nproc) install
        cd ..
    
    - name: Clone and build L-SMASH
      shell: bash
      run: |
        set -x
        git clone --depth 1 --branch master ${LSMASH_URL} lsmash
        cd lsmash
        ./configure --prefix="${LOCAL_INSTALL_DIR}" --target-os="${_TRIPLET}" --cross-prefix="${_TRIPLET}-"
        make -j$(nproc)
        make -j$(nproc) install
        cd ..
    
    - name: Build x264
      shell: bash
      run: |
        set -x
        ./configure --host="${_TRIPLET}" --cross-prefix="${_TRIPLET}-" --enable-pic --enable-strip
        make -j$(nproc) x264 checkasm
    
    - name: Test
      shell: bash
      run: |
        set -x
        ${_WRAPPER} ./checkasm8${_PLATFORMSUFFIX}
        ${_WRAPPER} ./checkasm10${_PLATFORMSUFFIX}
    
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: x264-win64
        path: |
          x264${_PLATFORMSUFFIX}
          checkasm8${_PLATFORMSUFFIX}
          checkasm10${_PLATFORMSUFFIX}
          config.log
